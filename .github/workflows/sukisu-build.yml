name: Build 4.19nongki rui5.0 + SukiSU

on:
  push:
    branches: [ main ]
  workflow_dispatch:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    
    
    - name: Checkout code 
      uses: actions/checkout@v4
    
    
    # ---------- ② 依赖 ----------
    - name: Install deps
      run: |
        sudo apt-get update -qq
        sudo apt-get install -y --no-install-recommends \
          build-essential binutils-aarch64-linux-gnu bc bison flex \
          libssl-dev libelf-dev python3 python3-setuptools git wget \
          curl ca-certificates gcc make rsync libncurses-dev \
          gcc-aarch64-linux-gnu cpio unzip
        # 可选：更新 binutils
        sudo apt-get install -y binutils=2.38-* || true

    # ---------- ③ Clang ----------
    - name: Download ZyCromerZ Clang
      run: |
        wget -q https://github.com/ZyCromerZ/Clang/releases/download/10.0.1-20220724-release/Clang-10.0.1-20220724.tar.gz
        mkdir -p "$HOME/clang-tools"
        tar -xzf Clang-10.0.1-20220724.tar.gz -C "$HOME/clang-tools"
        rm Clang-10.0.1-20220724.tar.gz

    # ---------- ④ SukiSU ----------
    - name: Inject SukiSU
      working-directory: ${{ github.workspace }}
      run: |
        ls -l | grep '^d'
        pwd && ls -la
        
        
        
        
        patch -p1 < ksu_hooks_sukisu_4.19.patch || true
        
        
        curl -LSs "https://raw.githubusercontent.com/SukiSU-Ultra/SukiSU-Ultra/main/kernel/setup.sh" | bash -s nongki
        

    # ---------- ⑦ 配置 & 编译 ----------
    - name: Configure & Build
      working-directory: ${{ github.workspace }}
      run: |
        export KBUILD_BUILD_HOST=gh-actions
        export PATH="$HOME/clang-tools/bin:$PATH"
        export CROSS_COMPILE=aarch64-linux-gnu-
        export ARCH=arm64
        export LLVM=1
        
        
        rm -rf "$HOME/out"
        mkdir -p "$HOME/out"

        KERNEL_DEFCONFIG=vendor/kona-perf_defconfig
        make O="$HOME/out" LLVM=1 "$KERNEL_DEFCONFIG"

                # 开feature
        scripts/config --file "$HOME/out/.config" \
          --enable KSU \
          --enable KSU_KPM \
          --enable KSU_SUSFS \
          --enable KSU_MANUAL_HOOK \
          --enable KALLSYMS \
          --enable KALLSYMS_ALL \
          --enable KSU_SUSFS_HAS_MAGIC_MOUNT \
          --enable KSU_SUSFS_SUS_PATH \
          --enable KSU_SUSFS_SUS_MOUNT \
          --enable KSU_SUSFS_SUS_KSTAT \
          --enable KSU_SUSFS_TRY_UMOUNT \
          --disable KSU_SUSFS_SUS_SU \
          --enable KSU_SUSFS_DEF_H

        grep -E 'CONFIG_KSU|CONFIG_KSU_SUSFS|CONFIG_KSU_KPM' "$HOME/out/.config" || echo "❌ 未找到"                             
        make O="$HOME/out" LLVM=1 -j6

    # ---------- ⑧ AnyKernel3 打包 ----------
    - name: Pack flashable zip
      run: |
        git clone --depth=1 https://github.com/osm0sis/AnyKernel3.git /tmp/ak3

        # 1. 产物复制
        cp "$HOME/out/arch/arm64/boot/Image"*    /tmp/ak3/zImage    2>/dev/null || true
        cp "$HOME/out/arch/arm64/boot/dtb"       /tmp/ak3/dtb       2>/dev/null || true
        cp "$HOME/out/arch/arm64/boot/dtbo.img"  /tmp/ak3/dtbo.img  2>/dev/null || true

        # 2. 下载并修正 busybox 权限
        mkdir -p /tmp/ak3/tmp
        curl -Lo /tmp/ak3/tools/busybox https://github.com/osm0sis/busybox-static/raw/master/busybox-arm64
        chmod 755 /tmp/ak3/tools/busybox
        chmod -R 755 /tmp/ak3/tools /tmp/ak3/tmp

        # 3. 替换 anykernel.sh（保留你发的内容）
        cd /tmp/ak3
        cat > anykernel.sh <<'EOF'
        ### AnyKernel3 Ramdisk Mod Script
        ## osm0sis @ xda-developers

        properties() { '
        kernel.string=Flashing Kernel Now...Please manually close avb2.0 after completion.
        do.devicecheck=0
        do.modules=0
        do.systemless=1
        do.cleanup=1
        do.cleanuponabort=0
        device.name1=
        device.name2=
        device.name3=
        device.name4=
        device.name5=
        supported.versions=
        supported.patchlevels=
        supported.vendorpatchlevels=
        '; }

        BLOCK=boot;
        IS_SLOT_DEVICE=0;
        RAMDISK_COMPRESSION=auto;
        PATCH_VBMETA_FLAG=auto;

        . tools/ak3-core.sh;
        dump_boot;
        write_boot;
        EOF

        # 4. 打包
        zip -r9 "$GITHUB_WORKSPACE/SukiSU-4.19-boot.zip" * -x .git README.md    
    # ---------- ⑨ 上传 & 发布 ----------
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: SukiSU-4.19-${{ github.run_number }}
        path: SukiSU-4.19-boot.zip
